<!DOCTYPE html>
<html>
    <head>
        <title>A Group Text Editor</title>
        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>

        <!-- https://code.google.com/p/google-diff-match-patch/ -->
        <script src="//cdnjs.cloudflare.com/ajax/libs/diff_match_patch/20121119/diff_match_patch.js"></script>

        <script src="//cdnjs.cloudflare.com/ajax/libs/socket.io/0.9.16/socket.io.min.js"></script>
    </head>

    <body>
        <form>
            <label for="filename">File Name</label>
            <input type="text" name="filename" value="{{filename}}">
            <br/>
            <textarea name="content" rows="24" cols="80"></textarea>
            <br/>
            <input type="button" name="save" value="Save File">
        </form>

        <script>
            var dmp = new diff_match_patch();

            /*
             * Used the diff_match_patch library to generate a patch file for
             * to blocks of text.
             */
            function generatePatch(prevContent, newContent) {
                console.log("----- Generating File Path -----");
                var ms_start = (new Date()).getTime(),
                    diff = dmp.diff_main(prevContent, newContent, true);

                if(diff.length > 2)
                    dmp.diff_cleanupSemantic(diff);

                var patchList = dmp.patch_make(prevContent, newContent, diff),
                    patchText = dmp.patch_toText(patchList),
                    ms_end = (new Date()).getTime();

                console.log("Patch generation took %s ms.", ms_end - ms_start);
                console.log("--------------------------------");
                return patchText;
            }


            /*
             * Used the diff_match_patch library to apply a patch file to a block
             * of text.
             */
            function applyPatch(patchText, content) {
                console.log("----- Applying Patch -----");
                var ms_start = (new Date()).getTime(),
                    patchList = dmp.patch_fromText(patchText),
                    newContent = dmp.patch_apply(patchList, content),
                    ms_end = (new Date()).getTime();

                console.log("Applying patch took %s ms.", ms_end - ms_start);
                console.log("--------------------------");

                return newContent[0];
            }

            function getFileName() {
                return $("[name='filename']").val();
            }


            function getFileContent() {
                return $("[name='content']").val();
            }


            /*
             * This variable holds the value of the file as it was defined
             * on the server.
             */
            var serverText = "{{content}}";
            //var serverSocket = io.connect('http://localhost');
            var serverSocket = io.connect('/');


            /*
             * Event handler for the save button
             */
            $("[name='save']").on("click", function() {
                //var clientText = $("[name='content']").val(),
                var fileName = getFileName(),
                    fileContent = getFileContent(),
                    patch = generatePatch(serverText, fileContent);

                console.log(patch); // TODO: send this to the server instead
                //serverSocket.emit("save", {p: patch});
                serverSocket.emit("save", {name: fileName, patch: patch});

                // update the URL without posting
                history.pushState({name: fileName}, fileName, fileName);

                serverText = fileContent;
            });

            serverSocket.on("save", function(fileData){
                //var clientText = $("[name='content']").val(),
                    //patch = generatePatch(serverText, clientText);
                //socket.emit("save", {p: patch});
                //serverText = clientText;
                //var newText = applyPatch(data.p, serverText);
                //console.dir(data);
                if (getFileName() == fileData.name){
                    console.log("----- Incoming changes from server -----");
                    serverText = applyPatch(fileData.patch, getFileContent());
                    $("[name='content']").val(serverText);
                }
                //$("[name='content']").val(newText);
                //serverText = newText;
            });

            $("[name='filename']").keypress(function(){
                //console.log(this.value);
            });
        </script>
    </body>
</html>